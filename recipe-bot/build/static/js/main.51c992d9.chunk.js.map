{"version":3,"sources":["RecipeItem.js","RecipeList.js","App.js","index.js"],"names":["RecipeItem","props","title","image","time","calories","protiens","carbs","fats","ingredientsArray","instructionsArray","useState","instructions","setInstructions","ingredients","setIngredients","className","src","alt","Math","round","onClick","RecipeList","recipes","values","RecipeArray","map","item","key","id","readyInMinutes","nutrition","nutrients","amount","ingredient","index","name","analyzedInstructions","steps","length","info","step","require","config","App","process","setRecipes","validation","setValidation","searchValue","slideValue","input","setInput","a","axios","method","url","response","data","results","console","log","message","updateInput","event","target","value","type","placeholder","onChange","required","min","max","fetchData","href","rel","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51c992d9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./RecipeItem.css\";\r\n\r\nconst RecipeItem = (props) => {\r\n  const {\r\n    title,\r\n    image,\r\n    time,\r\n    calories,\r\n    protiens,\r\n    carbs,\r\n    fats,\r\n    ingredientsArray,\r\n    instructionsArray,\r\n  } = props;\r\n\r\n  const [instructions, setInstructions] = useState(false);\r\n  const [ingredients, setIngredients] = useState(false);\r\n\r\n  const showInstructions = () => {\r\n    if (instructions) {\r\n      setInstructions(false);\r\n    } else {\r\n      setInstructions(true);\r\n    }\r\n  };\r\n\r\n  const showIngredients = () => {\r\n    if (ingredients) {\r\n      setIngredients(false);\r\n    } else {\r\n      setIngredients(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"recipe-card\">\r\n      <div className=\"recipe-grid\">\r\n        <div className=\"col-1\">\r\n          <h3 className=\"title\">{title}</h3>\r\n          <br />\r\n          <br />\r\n          <img src={`${image}`} alt=\"food\" className=\"img\" />\r\n        </div>\r\n\r\n        <div className=\"col-2\">\r\n          <br /> <br />\r\n          Ready In: {time} minutes\r\n          <br /> <br />\r\n          Nutrional Information\r\n          <br />\r\n          <br />\r\n          Calories: {Math.round(calories)} cal\r\n          <br />\r\n          Protiens: {Math.round(protiens)} g\r\n          <br />\r\n          Carbs: {Math.round(carbs)} g\r\n          <br />\r\n          Fats: {Math.round(fats)} g\r\n          <br /> <br />\r\n        </div>\r\n\r\n        <div className=\"col-3\">\r\n          <button className=\"btn\" onClick={showIngredients}>\r\n            Show Ingredients\r\n          </button>\r\n          <br />\r\n          <br />\r\n\r\n          {ingredients ? \"Ingredients\" : null}\r\n          <br />\r\n          <br />\r\n\r\n          {ingredients ? ingredientsArray : null}\r\n        </div>\r\n\r\n        <div className=\"col-4\">\r\n          <button className=\"btn\" onClick={showInstructions}>\r\n            Show Instructions\r\n          </button>\r\n          <br />\r\n          <br />\r\n\r\n          {instructions ? \"Instructions\" : null}\r\n          <br />\r\n          <br />\r\n\r\n          {instructions ? instructionsArray : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeItem;\r\n","import React from \"react\";\r\nimport RecipeItem from \"./RecipeItem\";\r\nimport \"./RecipeList.css\";\r\n\r\nconst RecipeList = (props) => {\r\n  const recipes = props.values;\r\n\r\n  if (!recipes) {\r\n    return null;\r\n  } else {\r\n    var RecipeArray = recipes.map((item) => {\r\n      return (\r\n        <RecipeItem\r\n          key={item.id}\r\n          id={item.id}\r\n          title={item.title}\r\n          image={item.image}\r\n          time={item.readyInMinutes}\r\n          calories={item.nutrition.nutrients[0].amount}\r\n          protiens={item.nutrition.nutrients[8].amount}\r\n          carbs={item.nutrition.nutrients[3].amount}\r\n          fats={item.nutrition.nutrients[1].amount}\r\n          ingredientsArray={item.nutrition.ingredients.map(\r\n            (ingredient, index) => {\r\n              return <p key={index}>{ingredient.name}</p>;\r\n            }\r\n          )}\r\n          instructionsArray={\r\n            item.analyzedInstructions[0].steps.length > 1\r\n              ? item.analyzedInstructions[0].steps.map((info, index) => {\r\n                  return <p key={index}>{info.step}</p>;\r\n                })\r\n              : \"Sorry no instructions available :(\"\r\n          }\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  return <div className=\"list\">{RecipeArray}</div>;\r\n};\r\n\r\nexport default RecipeList;\r\n","import React, { useState } from \"react\";\r\nimport RecipeList from \"./RecipeList\";\r\nimport \"./App.css\";\r\nimport axios from \"axios\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst App = () => {\r\n  const key = process.env.REACT_APP_KEY;\r\n\r\n  const [recipes, setRecipes] = useState([]);\r\n\r\n  const [validation, setValidation] = useState(\"\");\r\n\r\n  const [input, setInput] = useState({\r\n    searchValue: \"\",\r\n    slideValue: 1,\r\n  });\r\n\r\n  async function fetchData(input) {\r\n    try {\r\n      const response = await axios({\r\n        method: \"get\",\r\n\r\n        url: `https://api.spoonacular.com/recipes/complexSearch?query=${input.searchValue}&number=${input.slideValue}&instructionsRequired=true&addRecipeNutrition=true&apiKey=${key}`,\r\n      });\r\n\r\n      if (!response.data.results || response.data.results.length === 0) {\r\n        setValidation(\r\n          <p className=\"notFoundMessage\">\r\n            Sorry no food item found ! Try something else :)\r\n          </p>\r\n        );\r\n      } else {\r\n        setRecipes(response.data.results);\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n\r\n  const updateInput = (event) => {\r\n    setInput({ ...input, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  // const sendData = () => {\r\n  //   if (searchValue) {\r\n  //     setValidation(\"\");\r\n\r\n  //     fetchData(searchValue, slideValue);\r\n  //   } else {\r\n  //     setValidation(<h3 className=\"alert\">Enter some food item !</h3>);\r\n  //   }\r\n  // };\r\n\r\n  // const resetData = () => {\r\n  //   document.querySelector(\".search\").value = \"\";\r\n\r\n  //   document.querySelector(\".slider\").value = 1;\r\n\r\n  //   setValidation(\"\");\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"inputContainer\">\r\n        <p className=\"head\">Recipe Bot</p>\r\n        <input\r\n          type=\"text\"\r\n          name=\"searchValue\"\r\n          className=\"search\"\r\n          placeholder=\"Enter the food name\"\r\n          onChange={updateInput}\r\n          required\r\n        />\r\n        <p className=\"sliderhead\">Select number of recipes [1 to 20]</p>\r\n        <input\r\n          type=\"range\"\r\n          name=\"slideValue\"\r\n          className=\"slider\"\r\n          min=\"1\"\r\n          max=\"20\"\r\n          onChange={updateInput}\r\n        />\r\n\r\n        <button className=\"btn\" onClick={() => fetchData(input)}>\r\n          Find me Recipes\r\n        </button>\r\n\r\n        {/* <button className=\"btn\" type=\"reset\" onClick={resetData}>\r\n          Reset Input\r\n        </button> */}\r\n\r\n        <a\r\n          href=\"https://spoonacular.com/food-api\r\n              \"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"attribution\"\r\n        >\r\n          Powered by Spoonacular API\r\n        </a>\r\n      </div>\r\n      <div className=\"outputContainer\">\r\n        {validation}\r\n        <RecipeList values={recipes} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}